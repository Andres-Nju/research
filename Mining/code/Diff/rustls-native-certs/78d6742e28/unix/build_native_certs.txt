Codes/rustls-native-certs/78d6742e28/unix/build_native_certs_after.rs --- 1/2 --- Text (2 errors, exceeded DFT_PARSE_ERROR_LIMIT)
1 pub fn build_native_certs<B: RootStoreBuilder>(builder: &m  1         )),
. ut B) -> Result<(), Error> {                                . 
.                                                             2     }
.                                                             3 }
.                                                             4 
.                                                             5 pub fn load_native_certs() -> Result<Vec<Certificate>, Err
.                                                             . or> {
2     let likely_locations = openssl_probe::probe();          6     let likely_locations = openssl_probe::probe();
3     let mut first_error = None;                             7     let mut first_error = None;
.                                                             8     let mut certs = Vec::new();
4                                                             9 
5     if let Some(file) = likely_locations.cert_file {       10     if let Some(file) = likely_locations.cert_file {
6         if let Err(err) = load_file(builder, &file) {      11         if let Err(err) = load_file(&mut certs, &file) {

Codes/rustls-native-certs/78d6742e28/unix/build_native_certs_after.rs --- 2/2 --- Text (2 errors, exceeded DFT_PARSE_ERROR_LIMIT)
11     if let Some(err) = first_error {                      16     if let Some(err) = first_error {
12         Err(err)                                             
13     } else {                                                 
14         Ok(())                                               
15     }                                                        
16 }                                                            

