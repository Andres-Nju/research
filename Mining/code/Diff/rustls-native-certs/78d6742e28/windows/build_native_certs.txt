Codes/rustls-native-certs/78d6742e28/windows/build_native_certs_after.rs --- 1/2 --- Rust
1 pub fn build_native_certs<B: RootStoreBuilder>(builder: &m 1 pub fn load_native_certs() -> Result<Vec<Certificate>, Err
. ut B) -> Result<(), Error> {                               . or> {
2     let mut first_error = None;                            2     let mut certs = Vec::new();

Codes/rustls-native-certs/78d6742e28/windows/build_native_certs_after.rs --- 2/2 --- Rust
 7         if !usable_for_rustls(cert.valid_uses().unwrap())  . 
 .  {                                                         . 
 8             continue;                                      . 
 9         }                                                  . 
10                                                            . 
11         if let Err(err) = builder.load_der(cert.to_der().  7         if usable_for_rustls(cert.valid_uses().unwrap()) 
.. to_vec()) {                                                . {
12             first_error = first_error                      . 
13                 .or_else(|| Some(Error::new(ErrorKind::In  8             certs.push(Certificate(cert.to_der().to_vec()
.. validData, err)));                                         . ));
14         }                                                  9         }
15     }                                                     10     }
16                                                           11 
17     if let Some(err) = first_error {                      .. 
18         Err(err)                                          .. 
19     } else {                                              .. 
20         Ok(())                                            12     Ok(certs)
21     }                                                        

