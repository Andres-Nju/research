Initial commit
Add a noddy test
Attempt at windows support
Attempt at macos port

This needs some support upstreaming into security-framework.
Track upstream API changes
Add test comparing against mozilla roots
Relax mozilla comparison tests
Windows fixes:

- Don't open_local_machine, since this is privileged and doesn't gain
  any extra useful certs.
- Filter certificates by usage to avoid trusting (eg) code signing for TLS.
Relax mozilla comparison tests on Windows

Windows comes with very few roots (like 58 for me), as checked
with certmgr.msc.
Add some docs
Add example
Clean up how platforms are imported

This way works with rustfmt
Check we can access a few popular websites
MacOS integration tests
Skip bad certificates

Return optional partially-complete work with errors.
Prepare 0.2.0
Make the Linux path into a generic Unix one
Pretty print organizationIdentifier
CI: try to fix windows failure

Signed-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
CI: update allowed threshold for windows vm

Signed-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
Front the load_native_certs function in lib.rs

This saves some duplication in rustdoc.
Add a lower level build_native_certs function

This function lets people use their own root certificate parsing
routines, independently from what rustls provides.
Make the rustls dependency optional

This commit puts the load_native_certs function
behind a cargo feature that's turned on by default.

Fixes #2
Fix clippy suggestions
Allow macOS/Windows to have more extra roots
Guard with rustls feature where required
Remove dependency on rustls
Upgrade to latest webpki and rustls releases
Apply clippy suggestions in test code
Add an example to print trust anchors.
Remove now unused module
Add cross-platform support for SSL_CERT_FILE (#32)
Apply formatting with cargo fmt
Update/improve documentation
Check if the certificate has expired.
Document SSL_CERT_FILE environment variable

Fixes #46
Apply suggestions from clippy
Apply clippy suggestions for Rust 1.67
